version: '3.8'

services:
  # Knowledge Base API Service
  knowledge-base-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: knowledge-base-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATA_DIR=/app/data
    volumes:
      # Persist data directory for JSON file storage
      - knowledge_base_data:/app/data
      # Mount logs directory
      - ./logs:/app/logs
    networks:
      - knowledge-base-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development service (for development with hot reload)
  knowledge-base-api-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: knowledge-base-api-dev
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATA_DIR=/app/data
    volumes:
      # Mount source code for hot reload
      - ./src:/app/src
      - ./tests:/app/tests
      - knowledge_base_data_dev:/app/data
      - ./logs:/app/logs
    networks:
      - knowledge-base-network
    profiles:
      - dev

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: knowledge-base-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - knowledge-base-api
    networks:
      - knowledge-base-network
    profiles:
      - production

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: knowledge-base-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - knowledge-base-network
    profiles:
      - cache

volumes:
  # Persistent volume for production data
  knowledge_base_data:
    driver: local
  
  # Persistent volume for development data
  knowledge_base_data_dev:
    driver: local
  
  # Redis data volume
  redis_data:
    driver: local

networks:
  knowledge-base-network:
    driver: bridge

